#name: CI/CD Pipeline
#on:
#  push:
#  pull_request:
#  workflow_dispatch:
#
#jobs:
##  test:
##    name: Unit tests
##    runs-on: ubuntu-latest
##    steps:
##      - uses: actions/checkout@v3
##      - name: Prepare for tests
##        run: |
##          sudo apt install -y python3-pip
##          pip install -r requirements.txt
##          docker build . --file product-service/Dockerfile --tag rubyshores/prac7:latest
##      - name: Run tests
##        run: |
##          pytest product-service/test_product_service.py
#
#  build-and-push:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - name: Build dockerfile
#        run: docker build . --file product-service/Dockerfile --tag ${{secrets.DOCKER_USERNAME}}/product-service:latest
#
#      - name: Push to dockerhub
#        uses: docker/login-action@v3.0.0
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKER_TOKEN }}
#      - name: Push to DockerHub
#        run: docker push ${{ secrets.DOCKER_USERNAME }}/product-service:latest
#        #dckr_pat_8EgXsagCmFAZ__1gTCm1JIqQ2w4
#
#
#
name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Prepare for tests
        run: |
          sudo apt install -y python3-pip
          pip install -r requirements.txt
          docker build . --file product-service/Dockerfile --tag ${{secrets.DOCKERHUB_USERNAME}}/product-service:latest
      - name: Run tests
        run: |
          pytest test_product_service.py


  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build dockerfile
        run: docker build . --file product-service/Dockerfile --tag ${{secrets.DOCKERHUB_USERNAME}}/product-service:latest

      - name: Push to dockerhub
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/product-service:latest