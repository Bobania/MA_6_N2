version: '3.10'

services:
  refund_service:
    build: ./refund-service
    volumes:
      - ./refund-service/:/app/
    ports:
      - 8020:8020 # Исправлено для соответствия порту, который слушает приложение
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminadmin
      POSTGRES_DB: postgres
      POSTGRES_HOST: product_db # Используйте имя сервиса базы данных
      POSTGRES_PORT: 5432
      DATABASE_URI: postgresql://admin:adminadmin@product_db/postgres # Исправлено для правильного подключения к базе данных
      POSTGRES_URL: postgresql://myuser:pgpwd@student_db:5432/postgres
      AMQP_URL: amqp://guest:guest123@51.250.26.59:5672/
    networks:
      - app_network


  refund_db:
    image: postgres:12.1-alpine
    volumes:
      - postgres_data_refund:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminadmin
      POSTGRES_DB: postgres
    networks:
      - app_network


  product_service:
    build: ./product-service
    volumes:
      - ./product-service/:/app/
    ports:
      - 8000:8000 # Исправлено для соответствия порту, который слушает приложение
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminadmin
      POSTGRES_DB: postgres
      POSTGRES_HOST: product_db # Используйте имя сервиса базы данных
      POSTGRES_PORT: 5432
      DATABASE_URI: postgresql://admin:adminadmin@product_db/postgres # Исправлено для правильного подключения к базе данных
      POSTGRES_URL: postgresql://myuser:pgpwd@student_db:5432/postgres
      AMQP_URL: amqp://guest:guest123@51.250.26.59:5672/
    networks:
      - app_network
    depends_on:
      - keycloak



  product_db:
    image: postgres:12.1-alpine
    volumes:
      - postgres_data_product:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminadmin
      POSTGRES_DB: product
    networks:
      - app_network

  keycloak:
    volumes:
      - ./imports:/opt/jboss/keycloak/imports
    image: quay.io/keycloak/keycloak
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command:
      - start-dev
    networks:
      - app_network


  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    networks:
      - app_network
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./docker-config.yaml:/etc/promtail/docker-config.yaml
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers
    networks:
      - app_network
    command: -config.file=/etc/promtail/docker-config.yaml

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - app_network
    environment:
      - GF_EXPLORE_ENABLED=true
    volumes:
      - grafana-storage:/var/lib/grafana

  blackbox-exporter:
    image: prom/blackbox-exporter
    container_name: blackbox
    ports:
      - "9115:9115"
    networks:
      - app_network
    volumes:
      - ./blackbox.yml:/etc/blackbox_exporter/config.yml

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /etc/machine-id:/etc/machine-id:ro
      - /dev/kmsg:/dev/kmsg
    ports:
      - "10070:8080"
    networks:
      - app_network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app_network
    links:
      - cadvisor:cadvisor
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.max-block-duration=30m'
      - '--storage.tsdb.min-block-duration=30m'
      - '--web.enable-lifecycle'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node
    ports:
      - "9100:9100"
    networks:
      - app_network
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro

volumes:
  postgres_data_product:
  postgres_data_refund:
  prometheus:
    name: prometheus
  grafana-storage:
    driver: local



networks:
  app_network:
    driver: bridge